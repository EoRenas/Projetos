{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOWz4HmtHO72qmn5F0xI0Sj",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/EoRenas/Projetos/blob/main/TESTES%20DE%20NIVELAMENTO%20v.250321\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. TESTE DE WEB SCRAPING\n",
        "Este teste deve ser realizado nas linguagens Python ou Java. E o código deverá executar o/a:\n",
        "1.1. Acesso ao site: https://www.gov.br/ans/pt-br/acesso-a-informacao/participacao-da\n",
        "sociedade/atualizacao-do-rol-de-procedimentos\n",
        "1.2. Download dos Anexos I e II em formato PDF:\n",
        "1.3. Compactação de todos os anexos em um único arquivo (formatos ZIP, RAR, etc.)."
      ],
      "metadata": {
        "id": "IdOlAfBm-SKo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install requests beautifulsoup4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8_AH6gvTyRB3",
        "outputId": "e7d0f4ba-7fa0-4bb9-bba2-5e4cb02132f3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (2.32.3)\n",
            "Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (4.13.3)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests) (3.4.1)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests) (2.3.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests) (2025.1.31)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4) (2.6)\n",
            "Requirement already satisfied: typing-extensions>=4.0.0 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4) (4.13.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import de bibliotecas\n",
        "\n",
        "import requests\n",
        "from bs4 import BeautifulSoup\n",
        "import os\n",
        "import zipfile"
      ],
      "metadata": {
        "id": "nQAPbdg98-uj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# URL do site\n",
        "url = \"https://www.gov.br/ans/pt-br/acesso-a-informacao/participacao-da-sociedade/atualizacao-do-rol-de-procedimentos\"\n",
        "\n",
        "# Acessando o site\n",
        "response = requests.get(url)\n",
        "soup = BeautifulSoup(response.content, 'html.parser')"
      ],
      "metadata": {
        "id": "49HiG28Mz_AQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Encontrando os links dos PDFs\n",
        "linkPDF = []\n",
        "for link in soup.find_all('a', href=True):\n",
        "    if 'Anexo' in link.text and (link['href'].endswith('.pdf')):\n",
        "        linkPDF.append(link['href'])\n",
        "\n",
        "# Baixando os PDFs\n",
        "filePDF = []\n",
        "for pdf_link in linkPDF:\n",
        "    pdf_response = requests.get(pdf_link)\n",
        "    pdf_name = pdf_link.split('/')[-1]\n",
        "    with open(pdf_name, 'wb') as f:\n",
        "        f.write(pdf_response.content)\n",
        "        filePDF.append(pdf_name)"
      ],
      "metadata": {
        "id": "7-x03zuP9Vp_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "id": "ZSt5f4NSfiDa",
        "outputId": "b392eab7-df53-4433-c0fb-c77400b106fe"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Download e compactação concluídos!\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_fd2ee611-f3a1-4ee7-aafd-133ac3a0d70a\", \"anexos.zip\", 15406361)"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Compactando os PDFs em um arquivo ZIP\n",
        "with zipfile.ZipFile('anexos.zip', 'w') as zipf:\n",
        "    for pdf_file in filePDF:\n",
        "        zipf.write(pdf_file)\n",
        "\n",
        "print(\"Download e compactação concluídos!\")\n",
        "\n",
        "# Listar arquivos no diretório atual\n",
        "os.listdir()\n",
        "\n",
        "# Baixar o arquivo ZIP\n",
        "from google.colab import files\n",
        "files.download('anexos.zip')"
      ]
    }
  ]
}